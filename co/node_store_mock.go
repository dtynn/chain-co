// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ipfs-force-community/sophon-co/co (interfaces: INodeStore)

// Package co is a generated GoMock package.
package co

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockINodeStore is a mock of INodeStore interface.
type MockINodeStore struct {
	ctrl     *gomock.Controller
	recorder *MockINodeStoreMockRecorder
}

// MockINodeStoreMockRecorder is the mock recorder for MockINodeStore.
type MockINodeStoreMockRecorder struct {
	mock *MockINodeStore
}

// NewMockINodeStore creates a new mock instance.
func NewMockINodeStore(ctrl *gomock.Controller) *MockINodeStore {
	mock := &MockINodeStore{ctrl: ctrl}
	mock.recorder = &MockINodeStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINodeStore) EXPECT() *MockINodeStoreMockRecorder {
	return m.recorder
}

// AddNodes mocks base method.
func (m *MockINodeStore) AddNodes(arg0 []*Node) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddNodes", arg0)
}

// AddNodes indicates an expected call of AddNodes.
func (mr *MockINodeStoreMockRecorder) AddNodes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNodes", reflect.TypeOf((*MockINodeStore)(nil).AddNodes), arg0)
}

// GetHosts mocks base method.
func (m *MockINodeStore) GetHosts() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHosts")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetHosts indicates an expected call of GetHosts.
func (mr *MockINodeStoreMockRecorder) GetHosts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHosts", reflect.TypeOf((*MockINodeStore)(nil).GetHosts))
}

// GetNode mocks base method.
func (m *MockINodeStore) GetNode(arg0 string) *Node {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNode", arg0)
	ret0, _ := ret[0].(*Node)
	return ret0
}

// GetNode indicates an expected call of GetNode.
func (mr *MockINodeStoreMockRecorder) GetNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNode", reflect.TypeOf((*MockINodeStore)(nil).GetNode), arg0)
}
